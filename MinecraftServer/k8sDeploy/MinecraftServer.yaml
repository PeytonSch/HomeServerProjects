apiVersion: v1
kind: Namespace
metadata:
  name: minecraft-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: modded-minecraft-server
  namespace: minecraft-server
  labels:
    app: minecraft
    traefik.tcp.routers.mc.rule: HostSNI(`*`)
    traefik.port: 25565
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minecraft
  template:
    metadata:
      labels:
        app: minecraft
    spec:
      containers:
      - name: minecraftserver
        image: pscherschel/my-registry:minecraftserver
        command: ["/bin/bash"]
        args: ["-c", "while true; do sleep 60;done"]
        ports:
        - containerPort: 25565
          name: mc-cont-port
      imagePullSecrets:
      - name: regcred
      - name: regcred2

---

apiVersion: v1
kind: Service
metadata:
  name: minecraft-server
  namespace: minecraft-server
spec:
  selector:
    app: minecraft
  ports:
    - port: 25565
      targetPort: mc-cont-port
      name: mc-port

# ---

# Ingress Route so We Can Access Through Traefik

# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: mc-server-route
#   namespace: minecraft-server
# spec:
#   routes:
#     - match: Host(`local.mc`)
#       kind: Rule
#       services:
#         - name: minecraft-server
#           kind: Service
#           port: mc-port
#           namespace: minecraft-server

# ---

# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: mc-server-route
#   namespace: minecraft-server
# spec:
#   entryPoints:
#     - "minecarft"
#   routes:
#     - match: HostSNI(`*`)
#       kind: Rule
#       services:
#         - name: minecraft-server
#           kind: Service
#           port: mc-port
#           namespace: minecraft-server